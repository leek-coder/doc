2019最新、最清晰讲解Java虚拟机底层原理分析与性能优化(已更新)

jvm性能优化？

什么是jvm？  java虚拟机
  
加载，验证，准备，解析，初始化，使用，卸载


堆(线程共享)；虚拟机启动时创建，用于存放对象实例，几乎所有的对象(包含常量池)都是在堆上分配内存，当对象无法再该空间申请到内存时，将会跑出OutMemoryError一异常，同时也是垃圾收集器管理的主要区域，可通过  -Xmx  -Xms 参数来分别指定最大堆和最小堆

新生代：复制算法
老年代：标记清除算法

11月2号上午目标：  将JUC教程看完   一个三个小时
Java并发
CAS，线程池，线程安全，AQS，并发与并行，锁



volatile：保证共享数据的可见性。
volatile：不具备互斥性，不能保证变量的原子性



是否使用串行垃圾回收器：  -XX:+UseSerialGC
多大的年龄可以升至养老区： -XX:MaxTenuringThreshold 
查看堆初始大小： InitialHeapSize 

java -XX:+PrintFlagsInitial  -version
java -XX:+PrintFlagsFinal  -version

-Xss   -XX:ThreadStackSize  单个线程栈的大小  一般默认为512k---1024k

-Xmn 设置新生代大小      一般为堆的1/3 


-XX:+UseSerialGC :在新生代和老年代使用串行收集器
-XX:SurvivorRatio:设置Eden区大小和Survivor区大小的比例
-XX:NewRatio 新生代和老年代的比
-XX:+UseParNewGC:在新生代使用并行回收收集器





MQ衡量指标： 服务性能，数据存储，集群架构

Kafka是开源的分布式系统-订阅消息系统，kafka主要特点是基于Pull的模式来处理消息消费，追求高吞吐量，一开始的目的就是用于日志收集喝和传输。

Vitural：虚拟主机
Exchange：
Binding
Routing key
Queue

=====================================================================
类加载机制


类生命周期

1:加载(读取二进制文件)  2:验证(验证class文件格式规范，语义分析)  3:准备(分配内存)  4: 解析  5：初始化  6:使用  7:卸载


类加载器


类不会重复加载

类的唯一性：同一个类加载器，类名一样，代表同一个类
识别方式：ClassLoader InstanceId + PackageName +ClassName



类什么时候被卸载？

满足如下两个条件

1:该Class所有的实例都已经被GC
2:加载该类的ClassLoader实例已经被GC



 
双亲委派机制？

为了避免重复加载，由下到上逐级查找。



可以作为GC Root的对象

1.虚拟机栈中正在引用的对象
2.本地方法栈中正在引用的对象
3.静态属性引用的对象
4.方法区常量引用的对象

如果一个对象和CG Root之间不可达，也就是不存在引用



新生代eden区：s0：s1:  8:1:1

新生代:老年代  1:2

新生代：复制算法

老年代：标记整理



垃圾收集器
串行收集器：   -XX:+UseSerialGC  
单个线程来执行所有的垃圾收集工作，适合单处理器机器，Client模式下JMVM的默认选项


-XX:+UseSerialOldGC

可以在老年代使用，它采用了标记-整理算法，区别于新生代的复制算法。


容易引起 stop-the-world问题


并发收集器： CMS   专用老年代   设计目标是尽量减少停顿时间。


 



























