什么是分库分表？

  数据分片 sharding

为什么需要分库分表？

随着我们业务越来越大，单机单个应用瓶颈问题。

数据库持久化硬盘如何去扩容

数据库瓶颈解决方案？
1:sql，表优化
2:读写分离
3:分库分表



读写分离
读取(查询)，修改，插入，删除crud
数据库角色:master(主库，写库) slave(从库，读库)

读写分离：insert, delete,update走主库   然后select走slave

应用：读多写少，从库压力会很大，主库相对来说会低。

读写分离Java分类：

客户端：(应用层)开源框架：  sharding-jdbc 
优点：
1:程序自动完成，数据源管理方便
2:不需要维护，因为没用中间件
3:理论支持任何数据库

缺点：
增加了开发成本，代码有入侵
不能做到动态增加数据源



中间件:(代理层proxy) mycat


优点：



缺点：






分库分表:目前数据终极解决方案，解决高并发，数据分片

垂直：

水平：

如何设计一个永远都不需要迁移的方案

垂直+水平




分库分表的策略：

Hash取模：通过表的一列字段进行hash取出code的值来区分
Range范围：按年份，按时间
List预定义：事先设定100个数据


分库分表带来的问题？
1:查询数据结果集合并
2:sql的改变
3:分布式事务
4:全局唯一性id














